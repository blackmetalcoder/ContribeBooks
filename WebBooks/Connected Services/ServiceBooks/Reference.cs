//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBooks.ServiceBooks {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bocker", Namespace="http://schemas.datacontract.org/2004/07/ContribeBooks.models")]
    [System.SerializableAttribute()]
    public partial class Bocker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InStock {
            get {
                return this.InStockField;
            }
            set {
                if ((this.InStockField.Equals(value) != true)) {
                    this.InStockField = value;
                    this.RaisePropertyChanged("InStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="basket", Namespace="http://schemas.datacontract.org/2004/07/ContribeBooks.models")]
    [System.SerializableAttribute()]
    public partial class basket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceBooks.IBookStoreService")]
    public interface IBookStoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/DisplayUserName", ReplyAction="http://tempuri.org/IBookStoreService/DisplayUserNameResponse")]
        string DisplayUserName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/DisplayUserName", ReplyAction="http://tempuri.org/IBookStoreService/DisplayUserNameResponse")]
        System.Threading.Tasks.Task<string> DisplayUserNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/GetBooks", ReplyAction="http://tempuri.org/IBookStoreService/GetBooksResponse")]
        WebBooks.ServiceBooks.Bocker[] GetBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/GetBooks", ReplyAction="http://tempuri.org/IBookStoreService/GetBooksResponse")]
        System.Threading.Tasks.Task<WebBooks.ServiceBooks.Bocker[]> GetBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/GetBook", ReplyAction="http://tempuri.org/IBookStoreService/GetBookResponse")]
        WebBooks.ServiceBooks.Bocker[] GetBook(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/GetBook", ReplyAction="http://tempuri.org/IBookStoreService/GetBookResponse")]
        System.Threading.Tasks.Task<WebBooks.ServiceBooks.Bocker[]> GetBookAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/AddToChart", ReplyAction="http://tempuri.org/IBookStoreService/AddToChartResponse")]
        string AddToChart(string sessionID, string Author, string Title, string Price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/AddToChart", ReplyAction="http://tempuri.org/IBookStoreService/AddToChartResponse")]
        System.Threading.Tasks.Task<string> AddToChartAsync(string sessionID, string Author, string Title, string Price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/getBasket", ReplyAction="http://tempuri.org/IBookStoreService/getBasketResponse")]
        WebBooks.ServiceBooks.basket[] getBasket(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/getBasket", ReplyAction="http://tempuri.org/IBookStoreService/getBasketResponse")]
        System.Threading.Tasks.Task<WebBooks.ServiceBooks.basket[]> getBasketAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/OrderHead", ReplyAction="http://tempuri.org/IBookStoreService/OrderHeadResponse")]
        string OrderHead(string Name, string Adress, string Zip, string Email, string City, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/OrderHead", ReplyAction="http://tempuri.org/IBookStoreService/OrderHeadResponse")]
        System.Threading.Tasks.Task<string> OrderHeadAsync(string Name, string Adress, string Zip, string Email, string City, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/senOrderMail", ReplyAction="http://tempuri.org/IBookStoreService/senOrderMailResponse")]
        string senOrderMail(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/senOrderMail", ReplyAction="http://tempuri.org/IBookStoreService/senOrderMailResponse")]
        System.Threading.Tasks.Task<string> senOrderMailAsync(string Email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookStoreServiceChannel : WebBooks.ServiceBooks.IBookStoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookStoreServiceClient : System.ServiceModel.ClientBase<WebBooks.ServiceBooks.IBookStoreService>, WebBooks.ServiceBooks.IBookStoreService {
        
        public BookStoreServiceClient() {
        }
        
        public BookStoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookStoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookStoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookStoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DisplayUserName(string name) {
            return base.Channel.DisplayUserName(name);
        }
        
        public System.Threading.Tasks.Task<string> DisplayUserNameAsync(string name) {
            return base.Channel.DisplayUserNameAsync(name);
        }
        
        public WebBooks.ServiceBooks.Bocker[] GetBooks() {
            return base.Channel.GetBooks();
        }
        
        public System.Threading.Tasks.Task<WebBooks.ServiceBooks.Bocker[]> GetBooksAsync() {
            return base.Channel.GetBooksAsync();
        }
        
        public WebBooks.ServiceBooks.Bocker[] GetBook(string search) {
            return base.Channel.GetBook(search);
        }
        
        public System.Threading.Tasks.Task<WebBooks.ServiceBooks.Bocker[]> GetBookAsync(string search) {
            return base.Channel.GetBookAsync(search);
        }
        
        public string AddToChart(string sessionID, string Author, string Title, string Price) {
            return base.Channel.AddToChart(sessionID, Author, Title, Price);
        }
        
        public System.Threading.Tasks.Task<string> AddToChartAsync(string sessionID, string Author, string Title, string Price) {
            return base.Channel.AddToChartAsync(sessionID, Author, Title, Price);
        }
        
        public WebBooks.ServiceBooks.basket[] getBasket(string sessionID) {
            return base.Channel.getBasket(sessionID);
        }
        
        public System.Threading.Tasks.Task<WebBooks.ServiceBooks.basket[]> getBasketAsync(string sessionID) {
            return base.Channel.getBasketAsync(sessionID);
        }
        
        public string OrderHead(string Name, string Adress, string Zip, string Email, string City, string sessionID) {
            return base.Channel.OrderHead(Name, Adress, Zip, Email, City, sessionID);
        }
        
        public System.Threading.Tasks.Task<string> OrderHeadAsync(string Name, string Adress, string Zip, string Email, string City, string sessionID) {
            return base.Channel.OrderHeadAsync(Name, Adress, Zip, Email, City, sessionID);
        }
        
        public string senOrderMail(string Email) {
            return base.Channel.senOrderMail(Email);
        }
        
        public System.Threading.Tasks.Task<string> senOrderMailAsync(string Email) {
            return base.Channel.senOrderMailAsync(Email);
        }
    }
}
